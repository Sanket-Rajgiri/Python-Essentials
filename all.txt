git diff command compares working directory with staging area

git diff --staged command compares staging area with previous commit

Using following command we can skip the staging of modified files and can perform a direct commit:

git commit -a -m "Commit Message"

But this command will only commit the "Tracked files in your directory"
It will not be able to commit "Untracked" Files

git rm "File_Name" is used to remove a file

git add .   or   git add --a  both can used to stage all the files in current working directory 

git init command is used to intialize an empty repo in current directory

git status 

git log 

git commit -m "Commit Message"

git log --patch   or  shorter version : git log -p  command gives brief summary of commits in terms of lines added and deleted.

git log --static gives short summary of commits

git log -n (n is integer) gives log of recent "n" commits

git log --pretty=oneline

git log --pretty=short

git log --pretty=full

We can Add time filter to git log as well to see commits made in recent days/weeks/months/years

git log --since=n.(days/weeks/months/years) (for ex 2.days) 




git mv "FileName" "NewFileName" can be used to rename a file

git rm --chached "FileName" is used to stop tracking a file which is in gitignore but still getting tracked

To make changes to recent commit :

git commit --amend 

then vim editor will open 

then type "i" so you will be able to edit 

after typing required msg 

to exit press 'Esc' and then ":wq" at bottom to get back in git bash


git restore --staged "FileName" is used to unstage a file



-rm rf .git    \\to delete .git file


touch command for creating new file

.gitignore file is used for ignoring files by putting their names in file

if you want ignore files with certain extension like ".log"

then simply put "*.log"

you can ignore a directory as well by putting "/dir" here dir is name of directory/folder


git checkout -- <filename> can be used to change the modified file to its previous staged or committed version unless file is not staged. IF file is staged then it will not be able to change.


git checkout -f is used to bring your repo to previous commit state

